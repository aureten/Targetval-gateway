{
  "openapi": "3.1.0",
  "info": {
    "title": "TARGETVAL Gateway",
    "version": "1.2.1",
    "description": "Public spec matched to the live TargetVal FastAPI. Genetics endpoints use 'gene'; expression/mechanistic/tractability use 'symbol'; association/clinical use 'condition'. PPI advertises 'species' and 'cutoff'. /aggregate returns envelope {query, results} and accepts optional species/cutoff broadcast."
  },
  "servers": [
    {
      "url": "https://targetval-gateway.onrender.com"
    }
  ],
  "paths": {
    "/healthz": {
      "get": {
        "summary": "Liveness/Modules count",
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "modules": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/modules": {
      "get": {
        "summary": "List available modules",
        "operationId": "modules",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/genetics/l2g": {
      "get": {
        "operationId": "genetics_l2g",
        "summary": "Locus-to-Gene (GWAS Catalog / enriched target)",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/genetics/rare": {
      "get": {
        "operationId": "genetics_rare",
        "summary": "Rare disease genetics (Monarch / HGNC/NCBI IDs)",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/genetics/mendelian": {
      "get": {
        "operationId": "genetics_mendelian",
        "summary": "Mendelian (ClinVar/OpenTargets; NCBI Gene IDs allowed)",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/genetics/mr": {
      "get": {
        "operationId": "genetics_mr",
        "summary": "Mendelian randomization (placeholder wiring)",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/genetics/lncrna": {
      "get": {
        "operationId": "genetics_lncrna",
        "summary": "lncRNA associations",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/genetics/mirna": {
      "get": {
        "operationId": "genetics_mirna",
        "summary": "miRNA interactions (ENCORI/MirNet)",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/genetics/sqtl": {
      "get": {
        "operationId": "genetics_sqtl",
        "summary": "sQTL (Ensembl gene IDs work best)",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/genetics/epigenetics": {
      "get": {
        "operationId": "genetics_epigenetics",
        "summary": "ENCODE/epigenetics (prefer Ensembl gene IDs)",
        "parameters": [
          {
            "$ref": "#/components/parameters/GeneRequired"
          },
          {
            "$ref": "#/components/parameters/EfoOptional"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/assoc/bulk-rna": {
      "get": {
        "operationId": "assoc_bulk_rna",
        "summary": "Bulk RNA by tissue/disease",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConditionRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/assoc/bulk-prot": {
      "get": {
        "operationId": "assoc_bulk_prot",
        "summary": "Bulk protein (ProteomicsDB/PRIDE)",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConditionRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/assoc/sc": {
      "get": {
        "operationId": "assoc_sc",
        "summary": "Single-cell signal (HPA etc.)",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConditionRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/assoc/perturb": {
      "get": {
        "operationId": "assoc_perturb",
        "summary": "Perturbation datasets (best-effort)",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConditionRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/expr/baseline": {
      "get": {
        "operationId": "expr_baseline",
        "summary": "Baseline expression",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/expr/localization": {
      "get": {
        "operationId": "expr_localization",
        "summary": "Subcellular localization",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/expr/inducibility": {
      "get": {
        "operationId": "expr_inducibility",
        "summary": "Inducibility",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/mech/pathways": {
      "get": {
        "operationId": "mech_pathways",
        "summary": "Pathway membership (Reactome)",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/mech/ppi": {
      "get": {
        "operationId": "mech_ppi",
        "summary": "Proteinâprotein interactions (STRING; supports species and cutoff)",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/SpeciesOptional"
          },
          {
            "$ref": "#/components/parameters/CutoffOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/mech/ligrec": {
      "get": {
        "operationId": "mech_ligrec",
        "summary": "Ligandâreceptor interactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/tract/drugs": {
      "get": {
        "operationId": "tract_drugs",
        "summary": "Known drug interactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/tract/ligandability-sm": {
      "get": {
        "operationId": "tract_ligandability_sm",
        "summary": "Small-molecule ligandability",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/tract/ligandability-ab": {
      "get": {
        "operationId": "tract_ligandability_ab",
        "summary": "Antibody ligandability",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/tract/ligandability-oligo": {
      "get": {
        "operationId": "tract_ligandability_oligo",
        "summary": "Oligo ligandability",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/tract/immunogenicity": {
      "get": {
        "operationId": "tract_immunogenicity",
        "summary": "IEDB epitope/t-cell assay counts (heuristic)",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/tract/modality": {
      "get": {
        "operationId": "tract_modality",
        "summary": "Heuristic modality scorer (SM/AB/OLIGO) with tunable priors",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "in": "query",
            "name": "prior_sm",
            "schema": {
              "type": "number",
              "default": 0.55,
              "minimum": 0,
              "maximum": 1
            }
          },
          {
            "in": "query",
            "name": "prior_ab",
            "schema": {
              "type": "number",
              "default": 0.5,
              "minimum": 0,
              "maximum": 1
            }
          },
          {
            "in": "query",
            "name": "prior_oligo",
            "schema": {
              "type": "number",
              "default": 0.35,
              "minimum": 0,
              "maximum": 1
            }
          },
          {
            "in": "query",
            "name": "w_sm",
            "schema": {
              "oneOf": [
                {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "w_ab",
            "schema": {
              "oneOf": [
                {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "w_oligo",
            "schema": {
              "oneOf": [
                {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/clin/endpoints": {
      "get": {
        "operationId": "clin_endpoints",
        "summary": "Clinical endpoints (Ct.Gov v2 + v1)",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConditionRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/clin/rwe": {
      "get": {
        "operationId": "clin_rwe",
        "summary": "Real-world evidence (FAERS + observational trials)",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConditionRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/clin/safety": {
      "get": {
        "operationId": "clin_safety",
        "summary": "Safety signals (FAERS) â drug symbol",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/clin/pipeline": {
      "get": {
        "operationId": "clin_pipeline",
        "summary": "Pipeline (Inxight etc.) â target symbol",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/comp/intensity": {
      "get": {
        "operationId": "comp_intensity",
        "summary": "Competition intensity (qualitative)",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/comp/freedom": {
      "get": {
        "operationId": "comp_freedom",
        "summary": "Freedom-to-operate (qualitative)",
        "parameters": [
          {
            "$ref": "#/components/parameters/SymbolRequired"
          },
          {
            "$ref": "#/components/parameters/ConditionOptional"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EvidenceResponse"
          }
        }
      }
    },
    "/aggregate": {
      "post": {
        "operationId": "aggregate",
        "summary": "Run multiple modules and return { query, results }",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gene": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "condition": {
                    "type": "string"
                  },
                  "efo": {
                    "type": "string"
                  },
                  "limit": {
                    "type": "integer",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "modules": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "species": {
                    "type": "integer",
                    "description": "Optional species for modules that use it (e.g., STRING)."
                  },
                  "cutoff": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Optional interaction confidence cutoff used by some modules."
                  },
                  "extra": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Aggregate results with original query echoed back",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregateEnvelope"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "GeneRequired": {
        "in": "query",
        "name": "gene",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "HGNC symbol or stable ID (Ensembl/NCBI)."
      },
      "EfoOptional": {
        "in": "query",
        "name": "efo",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "EFO disease ID (e.g., EFO_0001073)."
      },
      "ConditionOptional": {
        "in": "query",
        "name": "condition",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Free-text disease/tissue; may be mapped to EFO if enabled."
      },
      "ConditionRequired": {
        "in": "query",
        "name": "condition",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SymbolRequired": {
        "in": "query",
        "name": "symbol",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SpeciesOptional": {
        "in": "query",
        "name": "species",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 9606
        },
        "description": "NCBI Taxonomy ID (default 9606=human)."
      },
      "CutoffOptional": {
        "in": "query",
        "name": "cutoff",
        "required": false,
        "schema": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.7
        },
        "description": "Interaction confidence cutoff (e.g., STRING combined_score normalized)."
      },
      "Limit": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 50,
          "minimum": 1,
          "maximum": 500
        }
      }
    },
    "schemas": {
      "Evidence": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR",
              "NO_DATA"
            ]
          },
          "source": {
            "type": "string"
          },
          "fetched_n": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "additionalProperties": true
          },
          "citations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fetched_at": {
            "type": "number"
          }
        },
        "required": [
          "status"
        ]
      },
      "AggregateResponse": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Evidence"
        }
      },
      "BucketScore": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "enum": [
              "B1",
              "B2",
              "B3",
              "B4",
              "B5",
              "B6",
              "B7"
            ]
          },
          "name": {
            "type": "string"
          },
          "score": {
            "oneOf": [
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ScoreReport": {
        "type": "object",
        "properties": {
          "gene": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "efo": {
            "type": "string"
          },
          "final_score": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "bucket_scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BucketScore"
            }
          },
          "positives": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "negatives": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "evidence": {
            "$ref": "#/components/schemas/AggregateResponse"
          }
        },
        "required": [
          "gene",
          "condition",
          "final_score",
          "bucket_scores"
        ]
      },
      "AggregateEnvelope": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "additionalProperties": true
          },
          "results": {
            "$ref": "#/components/schemas/AggregateResponse"
          }
        },
        "required": [
          "results"
        ]
      }
    },
    "responses": {
      "EvidenceResponse": {
        "description": "Evidence payload",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Evidence"
            }
          }
        }
      }
    }
  }
}
