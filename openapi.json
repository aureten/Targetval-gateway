{
  "openapi": "3.1.0",
  "info": {
    "title": "TargetVal Gateway (Public)",
    "version": "1.6.0",
    "description": "Public OpenAPI aligned to the v1.6.0 router/main refresh.\nGenetics B1 now use: GWAS Catalog (l2g), OMIM primary with Orphanet/ClinGen links (mendelian), MR-Base / IEU OpenGWAS (mr), eQTL Catalogue v2 (sqtl), Roadmap/BLUEPRINT (epigenetics). Assoc & perturbation: GEO/ArrayExpress, CPTAC/ProteomeXchange, Tabula Sapiens/HCA, DepMap/Achilles. Mechanistic: Reactome + KEGG + WikiPathways; LigRec via OmniPath. Tractability: ChEMBL/DrugBank/Inxight, SAbDab/Thera-SAbDab for antibodies. Clinical: CT.gov v2 + WHO ICTRP + EU CTR; adds /clin/biomarker-fit. Competition/IP via Lens.org search.\n\n[2025-09-28] Hybrid mode enabled across GETs (+mode=auto|live|snapshot). Aggregate body now accepts {species, cutoff, extra, mode}. Evidence allows optional {provenance, diagnostics}."
  },
  "servers": [
    {
      "url": "https://targetval-gateway.onrender.com"
    }
  ],
  "components": {
    "schemas": {
      "Evidence": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR",
              "NO_DATA"
            ]
          },
          "source": {
            "type": "string"
          },
          "fetched_n": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "additionalProperties": true
          },
          "citations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fetched_at": {
            "type": "number"
          },
          "error": {
            "type": "string"
          },
          "provenance": {
            "$ref": "#/components/schemas/Provenance"
          },
          "diagnostics": {
            "$ref": "#/components/schemas/Diagnostics"
          }
        },
        "required": [
          "status"
        ],
        "additionalProperties": true
      },
      "AggregateEnvelope": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "gene": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "ensembl_id": {
                "type": "string"
              },
              "efo": {
                "type": "string"
              },
              "condition": {
                "type": "string"
              },
              "limit": {
                "type": "integer"
              },
              "modules": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "species": {
                "type": "integer"
              },
              "cutoff": {
                "type": "number"
              }
            }
          },
          "results": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK",
                    "ERROR",
                    "NO_DATA"
                  ]
                },
                "source": {
                  "type": "string"
                },
                "fetched_n": {
                  "type": "integer"
                },
                "data": {
                  "type": "object",
                  "additionalProperties": true
                },
                "citations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fetched_at": {
                  "type": "number"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "Provenance": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "auto",
              "live",
              "snapshot"
            ]
          },
          "source": {
            "type": "string"
          },
          "source_version": {
            "type": "string"
          },
          "snapshot_id": {
            "type": "string"
          },
          "retrieved_at": {
            "type": "string"
          },
          "router_reason": {
            "type": "string"
          }
        }
      },
      "Diagnostics": {
        "type": "object",
        "properties": {
          "latency_ms": {
            "type": "integer"
          },
          "cache": {
            "type": "string"
          },
          "fallbacks": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "operationId": "root",
        "summary": "Service root",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "operationId": "healthz",
        "summary": "Service health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "modules": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/modules": {
      "get": {
        "operationId": "list_modules",
        "summary": "List module ids",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/module/{name}": {
      "get": {
        "operationId": "run_single_module",
        "summary": "Run a single module by id",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "gene",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ensembl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "efo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "condition",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          },
          "404": {
            "description": "Unknown module"
          }
        }
      }
    },
    "/aggregate": {
      "post": {
        "operationId": "aggregate",
        "summary": "Run multiple modules and return results",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gene": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "ensembl_id": {
                    "type": "string"
                  },
                  "efo": {
                    "type": "string"
                  },
                  "condition": {
                    "type": "string"
                  },
                  "limit": {
                    "type": "integer",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "modules": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "species": {
                    "type": "integer"
                  },
                  "cutoff": {
                    "type": "number"
                  },
                  "extra": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "live",
                      "snapshot"
                    ]
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregateEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/l2g": {
      "get": {
        "operationId": "genetics_l2g",
        "summary": "Locus-to-Gene via NHGRI-EBI GWAS Catalog (credible sets)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Gene symbol or Ensembl gene id (ENSGâ¦ )"
          },
          {
            "in": "query",
            "name": "efo",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "EFO disease/trait id; free-text resolved on server"
          },
          {
            "in": "query",
            "name": "ensembl",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Explicit Ensembl gene id override (ENSGâ¦ )"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/rare": {
      "get": {
        "operationId": "genetics_rare",
        "summary": "Rare variant lookups (ClinVar â gnomAD fallback)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/mendelian": {
      "get": {
        "operationId": "genetics_mendelian",
        "summary": "Mendelian/rare (OMIM primary; Orphanet/ClinGen links)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Gene symbol or Ensembl gene id"
          },
          {
            "in": "query",
            "name": "efo",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "EFO disease id (optional)"
          },
          {
            "in": "query",
            "name": "ensembl",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Explicit Ensembl gene id override"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/mr": {
      "get": {
        "operationId": "genetics_mr",
        "summary": "Mendelian randomization (MR-Base / IEU OpenGWAS endpoints)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "efo",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/lncrna": {
      "get": {
        "operationId": "genetics_lncrna",
        "summary": "lncRNA associations (RNAcentral)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/mirna": {
      "get": {
        "operationId": "genetics_mirna",
        "summary": "miRNA interactions (ENCORI/starBase)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/sqtl": {
      "get": {
        "operationId": "genetics_sqtl",
        "summary": "Splicing QTLs (eQTL Catalogue v2; eQTL fallback)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "efo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/genetics/epigenetics": {
      "get": {
        "operationId": "genetics_epigenetics",
        "summary": "Epigenetic support (Roadmap + BLUEPRINT curated links)",
        "parameters": [
          {
            "in": "query",
            "name": "gene",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "efo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/assoc/bulk-rna": {
      "get": {
        "operationId": "assoc_bulk_rna",
        "summary": "Bulk RNA associations (GEO/ArrayExpress; tissue-mapped)",
        "parameters": [
          {
            "in": "query",
            "name": "condition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/assoc/bulk-prot": {
      "get": {
        "operationId": "assoc_bulk_prot",
        "summary": "Bulk protein associations (CPTAC/ProteomeXchange)",
        "parameters": [
          {
            "in": "query",
            "name": "condition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/assoc/sc": {
      "get": {
        "operationId": "assoc_sc",
        "summary": "Single-cell signal (Tabula Sapiens / Human Cell Atlas)",
        "parameters": [
          {
            "in": "query",
            "name": "condition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/assoc/perturb": {
      "get": {
        "operationId": "assoc_perturb",
        "summary": "CRISPR/RNAi perturbation (DepMap/Achilles)",
        "parameters": [
          {
            "in": "query",
            "name": "condition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/expr/baseline": {
      "get": {
        "operationId": "expr_baseline",
        "summary": "Baseline expression (HPA â UniProt â GXA)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Preferred: HGNC symbol"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/expr/localization": {
      "get": {
        "operationId": "expr_localization",
        "summary": "Subcellular localization (COMPARTMENTS â UniProt)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/expr/inducibility": {
      "get": {
        "operationId": "expr_inducibility",
        "summary": "Inducible datasets (GEO)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/mech/pathways": {
      "get": {
        "operationId": "mech_pathways",
        "summary": "Reactome pathway membership (+ KEGG, WikiPathways)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/mech/ppi": {
      "get": {
        "operationId": "mech_ppi",
        "summary": "STRING proteinâprotein interactions",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "species",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 9606
            }
          },
          {
            "in": "query",
            "name": "cutoff",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0,
              "default": 0.9
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/mech/ligrec": {
      "get": {
        "operationId": "mech_ligrec",
        "summary": "Ligandâreceptor interactions (OmniPath)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/tract/drugs": {
      "get": {
        "operationId": "tract_drugs",
        "summary": "Known/experimental drugs (ChEMBL / DrugBank / Inxight)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/tract/ligandability-sm": {
      "get": {
        "operationId": "tract_ligandability_sm",
        "summary": "Small-molecule ligandability (ChEMBL)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/tract/ligandability-ab": {
      "get": {
        "operationId": "tract_ligandability_ab",
        "summary": "Antibody ligandability (SAbDab / Thera-SAbDab)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/tract/modality": {
      "get": {
        "operationId": "tract_modality",
        "summary": "Heuristic modality scorer (SM/AB/OLIGO) with tunable priors",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "prior_sm",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0,
              "default": 0.55
            }
          },
          {
            "in": "query",
            "name": "prior_ab",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0,
              "default": 0.5
            }
          },
          {
            "in": "query",
            "name": "prior_oligo",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0,
              "default": 0.35
            }
          },
          {
            "in": "query",
            "name": "w_sm",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0
            }
          },
          {
            "in": "query",
            "name": "w_ab",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0
            }
          },
          {
            "in": "query",
            "name": "w_oligo",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/tract/immunogenicity": {
      "get": {
        "operationId": "tract_immunogenicity",
        "summary": "IEDB immunogenicity proxies",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/clin/endpoints": {
      "get": {
        "operationId": "clin_endpoints",
        "summary": "Clinical endpoints (CT.gov v2 + WHO ICTRP + EU CTR)",
        "parameters": [
          {
            "in": "query",
            "name": "condition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 3
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/clin/rwe": {
      "get": {
        "operationId": "clin_rwe",
        "summary": "Real-world evidence (openFDA FAERS + CTs)",
        "parameters": [
          {
            "in": "query",
            "name": "condition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/clin/safety": {
      "get": {
        "operationId": "clin_safety",
        "summary": "Safety signals (FAERS)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/clin/pipeline": {
      "get": {
        "operationId": "clin_pipeline",
        "summary": "Pipeline (Inxight + ClinicalTrials.gov)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/comp/intensity": {
      "get": {
        "operationId": "comp_intensity",
        "summary": "Competition intensity (Lens.org; qualitative)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "condition",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/comp/freedom": {
      "get": {
        "operationId": "comp_freedom",
        "summary": "Freedom-to-operate (PatentsView; qualitative)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    },
    "/clin/biomarker-fit": {
      "get": {
        "operationId": "clin_biomarker_fit",
        "summary": "Biomarker fit (assayability, analyte availability, tissue specificity, precedent)",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "auto",
                "live",
                "snapshot"
              ]
            },
            "description": "Hybrid source mode: auto (default), live or snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evidence"
                }
              }
            }
          }
        }
      }
    }
  }
}
